/***
    The new CSS reset - version 1.8.3 (last updated 21.1.2023)
    GitHub page: https://github.com/elad2412/the-new-css-reset
***/

/*
    Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
    - The "symbol *" part is to solve Firefox SVG sprite bug
 */
*:where(
    :not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)
  ) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a,
button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol,
ul,
menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input,
textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
pre {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
 display:revert; revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
 - fix for the content editable attribute will work properly.
 - webkit-user-select: auto; added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable="false"])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable="true"]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

$primary: #1225f3;

body {
  min-height: 100vh;
  color: #fff;
  font-family: "Cairo", sans-serif;
  background: url(/images/bg.png) no-repeat center center/cover;
}

.container {
  max-width: 1320px;
  width: 100%;
  margin: 0 auto;
  padding: 0 30px;
}

.btn {
  background: $primary;
  color: #fff;
  padding: 12px 20px;
  transition: 0.3s all ease-in-out;
  border-radius: 10px;
  width: fit-content;
  cursor: pointer;
  &:focus {
    outline: 1px solid #fff;
  }
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 2px 20px rgba(#000, 0.1);
  }
}

.heading {
  h1 {
    font-size: 50px;
    font-weight: bold;
    span {
      color: $primary;
    }
  }
}

.heading {
  h2 {
    font-size: 30px;
    font-weight: bold;
    color: $primary;
  }
}

.card__layout {
  display: flex;
  flex-wrap: wrap;
  margin-top: 30px;
  .card {
    flex: 0 0 auto;
    max-width: calc(100% / 3);
    width: 100%;
    padding: 0 15px;
    margin-bottom: 30px;
    @media (max-width: 991px) {
      max-width: calc(100% / 2);
    }
    @media (max-width: 550px) {
      max-width: 100%;
    }
  }
}

.back__link {
  font-weight: bold;
  position: absolute;
  top: 30px;
  left: 30px;
  display: flex;
  align-items: center;
}
